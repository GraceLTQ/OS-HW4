def Deque() returns empty:
    empty = []

def put_left(d, v):
    """
    d points to a deque and v is some value. 
    Put v at the left-end of the deque. 
    Does not return a value.
    """
    atomically !d = [v,] + !d

def put_right(d, v): 
    """
    d points to a deque and v is some value. 
    Put v at the right-end of the deque. 
    Does not return a value.
    """
    atomically !d += [v,]

def get_left(d) returns next: 
    """
    d points to a deque. 
    If the deque is empty, the operation should return None. 
    Otherwise it should remove and return the value at the left-end of the deque.
    """
    atomically:
      if !d == []:
        next = None
      else:
        next = (!d)[0]
        del (!d)[0]

def get_right(d) returns next: 
    """
    d points to a deque.
    If the deque is empty, the operation should return None. 
    Otherwise it should remove and return the value at the right-end of the deque.
    """
    atomically:
      if len(!d) == 0:
        next = None
      else:
        next = (!d)[len(!d) - 1]
        del (!d)[len(!d) - 1]


